###############################################################################
# This file is part of openWNS (open Wireless Network Simulator)
# _____________________________________________________________________________
#
# Copyright (C) 2004-2007
# Chair of Communication Networks (ComNets)
# Kopernikusstr. 16, D-52074 Aachen, Germany
# phone: ++49-241-80-27910,
# fax: ++49-241-80-22242
# email: info@openwns.org
# www: http://www.openwns.org
# _____________________________________________________________________________
#
# openWNS is free software; you can redistribute it and/or modify it under the
# terms of the GNU Lesser General Public License version 2 as published by the
# Free Software Foundation;
#
# openWNS is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
# A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more
# details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
##############################################################################

from wnsbase.playground.Project import *
import wnsbase.RCS as RCS

bzrBaseURL = "https://launchpad.net/"

root = Root('./',"openwns-sdk", bzrBaseURL,
            RCS.Bazaar('.', 'sdk', 'main', '1.0'))

unitTests = Generic('./tests/unit', 
                'openwns-unittest', 
                bzrBaseURL,
                RCS.Bazaar('./tests/unit', 
                    'unittest', 'main', '1.0'))

documentation = MasterDocumentation('./documentation', 
                'openwns-documentation', 
                bzrBaseURL,
                RCS.Bazaar('./documentation', 
                    'documentation', 'main', '1.0'))

library = Library('./framework/library',
                "openwns-library", 
                bzrBaseURL,
                RCS.Bazaar('framework/library', 
                    'library', 'main', '1.0'),
                'WNS')

application = Binary('./framework/application', 
                "openwns-application", 
                bzrBaseURL,
                RCS.Bazaar('framework/application', 
                    'application', 'main', '1.0'),
                )

pywns = Python("./framework/pywns", 
                "openwns-pywns", 
                bzrBaseURL,
                RCS.Bazaar('framework/pywns', 
                    "pywns", "main", "1.0"))

rise = Library('./framework/rise', 
                'openwns-rise', 
                bzrBaseURL,
                RCS.Bazaar('./framework/rise',
                    'rise', 'main', '1.0'),
                'RISE')

dllbase = Library('./framework/dllbase', 
                'openwns-dllbase', 
                bzrBaseURL,
                RCS.Bazaar('./framework/dllbase',
                    'dllbase', 'main', '1.0'),
                'DLL')

constanze = Library('./modules/loadgen/constanze', 
                'openwns-constanze', 
                bzrBaseURL,
                RCS.Bazaar('./modules/loadgen/constanze',
                    'constanze', 'main', '1.0'),
                'CONSTANZE')

simpleTL = Library('./modules/mock/simpletl', 
                'openwns-simpletl', 
                bzrBaseURL,
                RCS.Bazaar('./modules/mock/simpletl',
                    'simpletl', 'main', '1.0'),
                'SIMPLETL')

ofdmaphy = Library('./modules/phy/ofdmaphy', 
                'openwns-ofdmaphy', 
                bzrBaseURL,
                RCS.Bazaar('./modules/phy/ofdmaphy',
                    'ofdmaphy', 'main', '1.0'),
                'OFDMAPHY')

wifimac = Library('./modules/dll/wifimac', 
                "openwns-wifimac", 
                bzrBaseURL,
                RCS.Bazaar('./modules/dll/wifimac',
                    'wifimac', 'main', '1.0'),
                'WIFIMAC')

wimac = Library('./modules/dll/wimac',
                "openwns-wimac",
                bzrBaseURL,
                RCS.Bazaar('./modules/dll/wimac',
                    'wimac', 'main', '1.0'),
                'WIMAC')


ip = Library('./modules/nl/ip', 
                'openwns-ip', 
                bzrBaseURL,
                RCS.Bazaar('./modules/nl/ip',
                    'ip', 'main', '1.0'),
                'IP')
                      
simpletl_test = SystemTest('./tests/system/simpletl-tests',
                'openwns-systemtest-simpletl', 
                bzrBaseURL,
                RCS.Bazaar('./tests/system/simpletl-tests',
                    'simpletl-tests', 'main', '1.0'))

libwns_test = SystemTest('./tests/system/libwns-tests', 
                'openwns-systemtest-library', 
                bzrBaseURL,
                RCS.Bazaar('./tests/system/libwns-tests',
                    'library-tests', 'main', '1.0'))

ofdma_test = SystemTest('./tests/system/ofdma-tests',
                'openwns-systemtest-ofdmascanner', 
                bzrBaseURL,
                RCS.Bazaar('./tests/system/ofdma-tests',
                    'ofdma-test', 'main', '1.0'))

mobility_test = SystemTest('./tests/system/mobility-tests',
                'openwns-systemtest-mobility', 
                bzrBaseURL,
                RCS.Bazaar('./tests/system/mobility-tests',
                    'mobility-test', 'main', '1.0'))


wifimac_test = SystemTest('./tests/system/wifimac-tests', 
                'openwns-systemtest-wifimac', 
                bzrBaseURL,
                RCS.Bazaar('./tests/system/wifimac-tests',
                    'wifimac-tests', 'main', '1.0'))

wimac_test = SystemTest('./tests/system/wimac-tests',
                'openwns-systemtest-wimac',
                bzrBaseURL,
                RCS.Bazaar('./tests/system/wimac-tests',
                    'wimac-tests', 'main', '1.0'))

wifi_wimac_coexist_test = SystemTest('./tests/system/wifi-wimac-coexist-tests',
                'openwns-systemtest-wifi-wimac-coexist',
                bzrBaseURL,
                RCS.Bazaar('./tests/system/wifi-wimac-coexist-tests',
                    'wifi-wimac-coexist-tests', 'main', '1.0'))


all = [
    root,
    unitTests,
    documentation,
    library,
    application,
    pywns,
    rise,
    dllbase,

    constanze,
    simpleTL,
    ofdmaphy,
    wifimac,
    wimac,
    ip,

    simpletl_test,
    libwns_test,
    ofdma_test,
    mobility_test,
    wifimac_test,
    wimac_test,
    wifi_wimac_coexist_test
    ]

# commands to prepare the sandbox for playground.py
# list of tuples, where tuples are (command, directory to execute command in)
prereqCommands = [('scons sandbox/default', '.')]
