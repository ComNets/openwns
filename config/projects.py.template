# __projectFetcher__from: http://openwns.comnets.rwth-aachen.de/Wiki/InstallationTutorial?action=AttachFile&do=get&target=projects.py
# __projectFetcher__from: http://openwns.comnets.rwth-aachen.de/Wiki/InstallationTutorial?action=AttachFile&do=get&target=projects.py
###############################################################################
# This file is part of openWNS (open Wireless Network Simulator)
# _____________________________________________________________________________
#
# Copyright (C) 2004-2007
# Chair of Communication Networks (ComNets)
# Kopernikusstr. 16, D-52074 Aachen, Germany
# phone: ++49-241-80-27910,
# fax: ++49-241-80-22242
# email: info@openwns.org
# www: http://www.openwns.org
# _____________________________________________________________________________
#
# openWNS is free software; you can redistribute it and/or modify it under the
# terms of the GNU Lesser General Public License version 2 as published by the
# Free Software Foundation;
#
# openWNS is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
# A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more
# details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
##############################################################################

from wnsbase.playground.Project import *
import wnsbase.RCS as RCS

bzrBaseURL = "bzr://bazaar.comnets.rwth-aachen.de/openWNS/main"
bzrBaseAddOnUrl = "bzr://bazaar.comnets.rwth-aachen.de/openWNS/addOns/main"

root         = Root('./', "openWNS--main--1.0", bzrBaseURL,
                    RCS.Bazaar('.', 'openWNS', 'main', '1.0'))

unitTests = Generic('./tests/unit', 'unitTest-addOn--main--1.0', bzrBaseAddOnUrl,
                    RCS.Bazaar('./tests/unit',
                               'unitTest-addOn', 'main', '1.0'))

buildSupport = Generic('./framework/cn-scons--main--1.0',"cn-scons--main--1.0", bzrBaseURL,
                       RCS.Bazaar('framework/cn-scons--main--1.0', 'cn-scons', 'main', '1.0'),
                       alias="buildSupport")

pywns = Python("./framework/PyWNS-addOn--main--1.0", "PyWNS-addOn--main--1.0", bzrBaseAddOnUrl,
               RCS.Bazaar('./framework/PyWNS-addOn--main--1.0', "PyWNS", "main", "1.0"),
               alias="PyWNS--main--1.0")

libwns       = Library('./framework/libwns--main--1.0',"libwns--main--1.0", bzrBaseURL,
                       RCS.Bazaar('framework/libwns--main--1.0',
                                  'libwns', 'main', '1.0'),
                       [], 'WNS')

libwns_addon = AddOn(libwns, "libwns-addOn--main--1.0", bzrBaseAddOnUrl,
                     RCS.Bazaar('', "libwns", "main", "1.0"))

wns_core     = Binary('./framework/wns-core--main--1.0', "wns-core--main--1.0", bzrBaseAddOnUrl,
                       RCS.Bazaar('./framework/wns-core--main--1.0',
                                  'wns-core', 'main', '1.0'),
                       [])

rise        = Library('./framework/rise--unstable--1.3', 'rise--unstable--1.3', bzrBaseURL,
                      RCS.Bazaar('./framework/rise--unstable--1.3',
                                  'rise', 'unstable', '1.3'),
                      [], 'RISE')

rise_addon = AddOn(rise, "rise-addOn--unstable--1.3", bzrBaseAddOnUrl,
                   RCS.Bazaar('', "rise", "unstable", "1.3"))

dllBase     = Library('./framework/DLLBase--main--0.1', 'DLLBase--main--0.1', bzrBaseURL,
                      RCS.Bazaar('./framework/DLLBase--main--0.1',
                                 'DLLBase', 'main', '0.1'),
                      [], 'DLL')

dllBase_addon = AddOn(dllBase, 'DLLBase-addOn--main--0.1', bzrBaseAddOnUrl,
                      RCS.Bazaar('','DLLBase-addOn', 'main', '0.1'))

tutorial    = Library('./framework/Tutorial--main--1.0', 'Tutorial--main--1.0', bzrBaseAddOnUrl,
                      RCS.Bazaar('./framework/Tutorial--main--1.0',
                                  'Tutorial', 'main', '1.0'),
                      [], 'TUTORIAL')

glue        = Library('./modules/dll/glue--main--1.0', 'glue--main--1.0', bzrBaseURL,
                      RCS.Bazaar('./modules/dll/glue--main--1.0',
                                  'glue', 'main', '1.0'),
                      [], 'GLUE')

glue_addon = AddOn(glue, 'glue-addOn--main--1.0', bzrBaseAddOnUrl,
                   RCS.Bazaar('', 'glue-addOn', 'main', '1.0'))

copper = Library('./modules/phy/Copper--main--1.0', 'Copper--main--1.0', bzrBaseURL,
                 RCS.Bazaar('./modules/phy/Copper--main--1.0',
                             'Copper', 'main', '1.0'),
                 [], 'COPPER')

copper_addon = AddOn(copper, 'Copper-addOn--main--1.0', bzrBaseAddOnUrl,
                   RCS.Bazaar('', 'Copper-addOn', 'main', '1.0'))

ip = Library('./modules/nl/ip--unstable--1.2', 'ip--unstable--1.2', bzrBaseURL,
             RCS.Bazaar('./modules/nl/ip--unstable--1.2',
                        'ip', 'unstable', '1.2'),
             [], 'IP')

ip_addon = AddOn(ip, 'ip-addOn--unstable--1.2', bzrBaseAddOnUrl,
                 RCS.Bazaar('','ip-addOn', 'unstable', '1.2'))

constanze = Library('./modules/loadgen/Constanze--unstable--1.0', 'Constanze--unstable--1.0', bzrBaseURL,
                    RCS.Bazaar('./modules/loadgen/Constanze--unstable--1.0',
                                'Constanze', 'unstable', '1.0'),
                    [], 'CONSTANZE')

constanze_addon = AddOn(constanze, 'Constanze-addOn--unstable--1.0', bzrBaseAddOnUrl,
                        RCS.Bazaar('','Constanze-addOn', 'unstable', '1.0'))

ofdmaPhy = Library('./modules/phy/OFDMAPhy--unstable--0.3', 'OFDMAPhy--unstable--0.3', bzrBaseURL,
                   RCS.Bazaar('./modules/phy/OFDMAPhy--unstable--0.3',
                               'OFDMAPhy', 'unstable', '0.3'),
                   [], 'OFDMAPHY')

ofdmaPhy_addon = AddOn(ofdmaPhy, 'OFDMAPhy-addOn--unstable--0.3', bzrBaseAddOnUrl,
		       RCS.Bazaar('', 'OFDMAPhy-addOn', 'unstable', '0.3'))

winprost = Library('./modules/dll/WinProSt--main--0.3', 'WinProSt--main--0.3', bzrBaseURL,
                   RCS.Bazaar('./modules/dll/WinProSt--main--0.3',
                              'WinProSt', 'main', '0.3'),
                   [], 'WINPROST')

winprost_addon = AddOn(winprost, 'WinProSt-addOn--main--0.3', bzrBaseAddOnUrl,
                         RCS.Bazaar('','WinProSt-addOn', 'main', '0.3'))

wimac = Library('./modules/dll/WiMAC--main--1.0', 'WiMAC--main--1.0', bzrBaseURL,
                RCS.Bazaar('./modules/dll/WiMAC--main--1.0',
                            'WiMAC', 'main', '1.0'),
                [], 'WIMAC')

wimac_addon = AddOn(wimac, 'WiMAC-addOn--main--1.0', bzrBaseAddOnUrl,
                    RCS.Bazaar('','WiMAC-addOn', 'main', '1.0'))

wifimac = Library('./modules/dll/WiFiMAC--main--0.2', "WiFiMAC--main--0.2", bzrBaseURL,
                       RCS.Bazaar('./modules/dll/WiFiMAC--main--0.2',
                                  'WiFiMAC', 'main', '0.2'),
                       [], 'WIFIMAC')

wifimac_addon = AddOn(wifimac, 'WiFiMAC-addOn--main--0.2', bzrBaseAddOnUrl,
                         RCS.Bazaar('','WiFiMAC-addOn', 'main', '0.2'))

mih = Library('./modules/dll/mih--main--1.0', 'mih--main--1.0', bzrBaseURL,
              RCS.Bazaar('./modules/dll/mih--main--1.0',
                          'mih', 'main', '1.0'),
              [], 'MIH')

mih_addon = AddOn(mih, 'mih-addOn--main--1.0', bzrBaseAddOnUrl,
                  RCS.Bazaar('','mih-addOn', 'main', '1.0'))

simpleTL = Library('./modules/mock/simpleTL--main--1.0', 'simpleTL--main--1.0', bzrBaseURL,
                   RCS.Bazaar('./modules/mock/simpleTL--main--1.0',
                               'simpleTL', 'main', '1.0'),
                   [], 'SIMPLETL')

simpleTL_addon = AddOn(simpleTL, 'simpleTL-addOn--main--1.0', bzrBaseAddOnUrl,
                RCS.Bazaar('','simpleTL-addOn', 'main', '1.0'))

tcp = Library('./modules/tl/tcp--unstable--1.0', 'tcp--unstable--1.0', bzrBaseURL,
              RCS.Bazaar('./modules/tl/tcp--unstable--1.0',
                          'tcp', 'unstable', '1.0'),
              [], 'TCP')

tcp_addon = AddOn(tcp, 'tcp-addOn--unstable--1.0', bzrBaseAddOnUrl,
                         RCS.Bazaar('','tcp-addOn', 'unstable', '1.0'))

moduleTemplate = Library('./framework/ModuleTemplate--main--1.0', 'ModuleTemplate--main--1.0', bzrBaseURL,
                         RCS.Bazaar('./framework/ModuleTemplate--main--1.0',
                                     'ModuleTemplate', 'main', '1.0'),
                         [libwns, ])

moduleTemplate_addon = AddOn(moduleTemplate, 'ModuleTemplate-addOn--main--1.0', bzrBaseAddOnUrl,
                             RCS.Bazaar('','ModuleTemplate-addOn', 'main', '1.0'))

tutorialSolution = Library('./framework/TutorialSolution--main--1.0', 'TutorialSolution--main--1.0', bzrBaseAddOnUrl,
                           RCS.Bazaar('./framework/TutorialSolution--main--1.0',
                                       'TutorialSolution', 'main', '1.0'),
                           [], 'TUTORIALSOLUTION')

ip_test = SystemTest('./tests/system/ip-Tests--main--1.0', 'ip-Tests--main--1.0', bzrBaseAddOnUrl,
                     RCS.Bazaar('./tests/system/ip-Tests--main--1.0',
                                 'ip-Tests', 'main', '1.0'))

glue_test = SystemTest('./tests/system/glue-Tests--main--1.0', 'glue-Tests--main--1.0', bzrBaseAddOnUrl,
                       RCS.Bazaar('./tests/system/glue-Tests--main--1.0',
                                   'glue-Tests', 'main', '1.0'))

winprostTDD_test = SystemTest('./tests/system/WinProStTDD-Tests--main--1.0', 'WinProStTDD-Tests--main--1.0', bzrBaseAddOnUrl,
                              RCS.Bazaar('./tests/system/WinProStTDD-Tests--main--1.0',
                                         'WinProStTDD-Tests', 'main', '1.0'))

winprostMobility_test = SystemTest('./tests/system/WinProStMobility-Tests--main--1.0', 'WinProStMobility-Tests--main--1.0', bzrBaseAddOnUrl,
                                   RCS.Bazaar('./tests/system/WinProStMobility-Tests--main--1.0',
                                               'WinProStMobility-Tests', 'main', '1.0'))

winprostFDD_test = SystemTest('./tests/system/WinProStFDD-Tests--main--1.0', 'WinProStFDD-Tests--main--1.0', bzrBaseAddOnUrl,
                                   RCS.Bazaar('./tests/system/WinProStFDD-Tests--main--1.0',
                                               'WinProStFDD-Tests', 'main', '1.0'))

winprostHalfDuplexFDD_test = SystemTest('./tests/system/WinProStHalfDuplexFDD-Tests--main--1.0', 'WinProStHalfDuplexFDD-Tests--main--1.0', bzrBaseAddOnUrl,
                                   RCS.Bazaar('./tests/system/WinProStHalfDuplexFDD-Tests--main--1.0',
                                               'WinProStHalfDuplexFDD-Tests', 'main', '1.0'))

winprostCQI_test = SystemTest('./tests/system/WinProStCQI-Tests--main--1.0', 'WinProStCQI-Tests--main--1.0', bzrBaseAddOnUrl,
                                   RCS.Bazaar('./tests/system/WinProStCQI-Tests--main--1.0',
                                               'WinProStCQI-Tests', 'main', '1.0'))

wimac_test = SystemTest('./tests/system/WiMAC-Tests--main--1.2', 'WiMAC-Tests--main--1.2', bzrBaseAddOnUrl,
                        RCS.Bazaar('./tests/system/WiMAC-Tests--main--1.2',
                                    'WiMAC-Tests', 'main', '1.2'))

constanze_test = SystemTest('./tests/system/Constanze-Tests--main--1.0', 'Constanze-Tests--main--1.0', bzrBaseAddOnUrl,
                            RCS.Bazaar('./tests/system/Constanze-Tests--main--1.0',
                                        'Constanze-Tests', 'main', '1.0'))

tcp_test = SystemTest('./tests/system/tcp-Tests--main--1.0', 'tcp-Tests--main--1.0', bzrBaseAddOnUrl,
                      RCS.Bazaar('./tests/system/tcp-Tests--main--1.0',
                                  'tcp-Tests', 'main', '1.0'))

mih_test = SystemTest('./tests/system/mih-Tests--main--0.2', 'mih-Tests--main--0.2', bzrBaseAddOnUrl,
                      RCS.Bazaar('./tests/system/mih-Tests--main--0.2',
                                  'mih-Tests', 'main', '0.2'))

mobility_test = SystemTest('./tests/system/Mobility-Tests--main--1.0', 'Mobility-Tests--main--1.0', bzrBaseAddOnUrl,
                      RCS.Bazaar('./tests/system/Mobility-Tests--main--1.0',
                                  'Mobility-Tests', 'main', '1.0'))

ofdmaScanner_test = SystemTest('./tests/system/OFDMAScanner-Tests--main--1.0', 'OFDMAScanner-Tests--main--1.0', bzrBaseAddOnUrl,
                               RCS.Bazaar('./tests/system/OFDMAScanner-Tests--main--1.0',
                                           'OFDMAScanner-Tests', 'main', '1.0'))

wifimac_test = SystemTest('./tests/system/WiFiMAC-Tests--main--1.0', 'WiFiMAC-Tests--main--1.0', bzrBaseAddOnUrl,
                          RCS.Bazaar('./tests/system/WiFiMAC-Tests--main--1.0',
                                      'WiFiMAC-Tests', 'main', '1.0'))

wnsDocumentation = MasterDocumentation('./documentation--main--1.0', 'documentation--main--1.0', bzrBaseURL,
                           RCS.Bazaar('./documentation--main--1.0',
                                       'documentation', 'main', '1.0'))

liveCDBuilder = Generic('./framework/LiveCDBuilder--main--1.0', 'LiveCDBuilder--main--1.0', bzrBaseAddOnUrl,
                        RCS.Bazaar('./framework/LiveCDBuilder--main--1.0',
                                    'LiveCDBuilder', 'main', '1.0'))

wrowser = Python('./framework/Wrowser--main--0.9', 'Wrowser--main--0.9', bzrBaseAddOnUrl,
                 RCS.Bazaar('./framework/Wrowser--main--0.9',
                            'Wrowser', 'main', '0.9'))

all = [ root,
        unitTests,
        buildSupport,
        pywns,

        libwns,
        libwns_addon,
        wns_core,

        rise,
        rise_addon,

        dllBase,
        dllBase_addon,
        tutorial,
        glue,
        glue_addon,
        copper,
        copper_addon,

        ip,
        ip_addon,
        constanze,
        constanze_addon,
        ofdmaPhy,
	ofdmaPhy_addon,
        winprost,
        winprost_addon,
        wimac,
        wimac_addon,
        wifimac,
        wifimac_addon,
        mih,
        mih_addon,
        simpleTL,
        simpleTL_addon,
        tcp,
        tcp_addon,
        moduleTemplate,
        moduleTemplate_addon,
        tutorialSolution,

        ip_test,
        glue_test,
        winprostTDD_test,
        winprostMobility_test,
        winprostFDD_test,
        winprostHalfDuplexFDD_test,
        winprostCQI_test,
        wimac_test,
        constanze_test,
        tcp_test,
        mih_test,
        mobility_test,
        ofdmaScanner_test,
        wifimac_test,

        wnsDocumentation,
        liveCDBuilder,
        wrowser,

        ]

# commands to prepare the sandbox for playground.py
# list of tuples, where tuples are (command, directory to execute command in)
prereqCommands = [('scons', 'framework/PyWNS--main--1.0')]
